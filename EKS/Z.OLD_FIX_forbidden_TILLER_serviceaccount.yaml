#kubectl get sa default -o yaml -n kube-system
#helm repo update
#kubectl --namespace kube-system create serviceaccount tiller
#kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller
#helm init --upgrade 
#kubectl --namespace kube-system patch deploy tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'
#kubectl -n kube-system delete deployment tiller-deploy
#kubectl -n kube-system delete service/tiller-deploy
#helm --init

cat << EOF > ./ClusterRoleForTiller.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: tiller
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
EOF

kubectl apply -f ./ClusterRoleForTiller.yaml
rm ./ClusterRoleForTiller.yaml

kubectl create sa tiller -n kube-system

cat << EOF > ./ClusterRoleBindingForTiller.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: tiller
subjects:
- kind: ServiceAccount
  name: tiller
  namespace: kube-system
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: tiller
  apiGroup: rbac.authorization.k8s.io
EOF

kubectl apply -f ./ClusterRoleBindingForTiller.yaml
rm ./ClusterRoleBindingForTiller.yaml

