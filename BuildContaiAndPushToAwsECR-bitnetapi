cd /opt/$PROJ_NAME/$SERVICE_NAME
git fetch .
SERVICE_NAME=$(pwd | grep -o '[^/]*$')
PORT_SERVICE=$(cat ./Dockerfile | grep EXPOSE | grep -o '[^EXPOSE ]*$')

################################################## BUILD DOCKER IMAGE

cat <<EOF > Dockerfile_slim_image
FROM node:8

# Create app directory
WORKDIR /usr/src/code

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY package*.json ./


RUN npm install

# Bundle app source
COPY . .

EXPOSE 3000

CMD [ "npm", "run", "start" ]
EOF

docker build -f ./Dockerfile_slim_image -t $SERVICE_NAME:-latest .
if [ -f "Dockerfile_slim_image" ]; then rm Dockerfile_slim_image; fi;

docker tag $SERVICE_NAME:-latest $PROJ_URL_ECR:$SERVICE_NAME-latest
AWS_TOKEN=$(aws ecr get-login | awk '{print $6}')
docker login -u AWS -p $AWS_TOKEN https://$PROJ_URL_ECR
aws ecr batch-delete-image --repository-name automation --image-ids imageTag=$SERVICE_NAME-latest
docker push $PROJ_URL_ECR:$SERVICE_NAME-latest
